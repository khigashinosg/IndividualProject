# Pre-process data for training (standardisation)
def preprocess_data(data):
    # Extract numerical columns for standardisation
    numerical_columns = data.columns[2:7]

    # min-max standardise  each feature
    for column in numerical_columns:
        min_value = data[column].min()
        max_value = data[column].max()
        if max_value - min_value != 0: # make sure not to divide by 0
            data[column] = (data[column] - min_value) / (max_value - min_value)
        else:
            data[column] = 0

    return data

# Split data into training and testing sets
def train_test_split(data, train_end):
    # Select training and test periods
    train_end = datetime(2022,train_end[0],train_end[1]) # change date to end of training period
    test_start = train_end + timedelta(days=1) # test period is 1 day after train period ends

    # Split data into training and testing sets
    x_train = data.set_index('Occurrence Time')[:train_end.date()].iloc[:,1:-2]
    x_test = data.set_index('Occurrence Time')[test_start.date():].iloc[:,1:-2]
    y_train = data.set_index('Occurrence Time')[:train_end.date()].iloc[:,0]
    y_test = data.set_index('Occurrence Time')[test_start.date():].iloc[:,0]
    
    # Convert to tensors
    x_train = torch.tensor(x_train.values).float()
    x_test = torch.tensor(x_test.values).float()
    y_train = torch.tensor(y_train.values).float()
    y_test = torch.tensor(y_test.values).float()
    
    return x_train, x_test, y_train, y_test

# Create training and testing sets (spedfic to term 1 and term 2)
def t1_train_t2_test(t1_data, t2_data):
    # Split data into training and testing sets
    x_train = t1_data.iloc[:,2:-2]
    x_test = t2_data.iloc[:,2:-2]
    y_train = t1_data.iloc[:,1]
    y_test = t2_data.iloc[:,1]

    # Convert to tensors
    x_train = torch.tensor(x_train.values).float()
    x_test = torch.tensor(x_test.values).float()
    y_train = torch.tensor(y_train.values).float()
    y_test = torch.tensor(y_test.values).float()
    
    return x_train, x_test, y_train, y_test